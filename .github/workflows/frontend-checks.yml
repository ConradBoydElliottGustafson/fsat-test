# name: Frontend PR Checks

# on: 
  
#   pull_request:
#     branches: [pipeline-cleanup]
#     paths:
#     - 'frontend/**'
  
# jobs:

#   build-frontend:
#     name: Build-Frontend
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Build and push Frontend Docker image
#         uses: docker/build-push-action@v2
#         with:
#           context: ./frontend/
#           push: false
#           tags: frontend:latest

#   tests-frontend:
#     name: Tests-Frontend
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Tests
#         run: |
#           cd frontend
#           npm ci
#           npm test

  # linting:
  #   name: Linting-Code
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v24
      
  #     - name: Tests
  #       run: |
  #         cd backend
  #         npm install eslint --save-dev
  #         npm ci
  #         npm run lint
         



  # trivy-repo:
  #   name: Trivy-Repo
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Run Trivy vulnerability scanner in repo mode
  #       uses: aquasecurity/trivy-action@0.2.3
  #       with:
  #         scan-type: "fs"
  #         ignore-unfixed: true
  #         format: "sarif"
  #         output: "trivy-results.sarif"
  #         severity: "CRITICAL"

  #     - name: Upload Trivy scan results to GitHub Security tab
  #       uses: github/codeql-action/upload-sarif@v1
  #       with:
  #         sarif_file: "trivy-results.sarif"

  # codeql:
  #   name: CodeQL
  #   runs-on: ubuntu-latest
  #   permissions:
  #     actions: read
  #     contents: read
  #     security-events: write
  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: Initialize
  #     uses: github/codeql-action/init@v1
  #     with:
  #       languages: javascript

  #   # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
  #   # If this step fails, then you should remove it and run the build manually (see below)
  #   - name: Autobuild
  #     uses: github/codeql-action/autobuild@v1

  #   - name: Perform CodeQL Analysis
  #     uses: github/codeql-action/analyze@v1

